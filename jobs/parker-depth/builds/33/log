Started by user [8mha:////4HSeVHkKJ5mgbZK4sWy8myCb9E5jTwXackQ/FiSdye3XAAAAmR+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAz2EgZe/dLi1CL9wszSnMyiUgDL2Mr0wgAAAA==[0mQiuliru
Running as SYSTEM
Building remotely on [8mha:////4P1a+jSCm2+jQZ3VRdJij7cRjyhx4PB7el9tXnyqLu2zAAAAoR+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzuEgZR/eT83ILSktQi/eyMxJTEYt3kxCITAOR6YlPKAAAA[0mkhadas-car4 (car4) in workspace /root/workspace/workspace/parker-depth
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] Done
[parker-depth] $ /bin/sh -xe /tmp/jenkins6451546388168218730.sh
+ bash /root/myscript/build/build.sh
++ export MYSQL_PWD=123
++ MYSQL_PWD=123
++ export -f cmdb_mysql
+ set -ex
+ export -f public_project_update
+ export -f project_build
+ init_project_env
++ date +%Y%m%d
+ DT=20230706
+ UserName=jenkins
+ API_TOKEN=11b65309c9835de9579d9c9038853d9eb7
+ GIT_PRIVATE_TOKEN=emEDrsaJVjxKK5gSWrf-
+ GIT_HOST=192.168.50.191
++ echo parker/integration/depth
++ awk -F/ '{print $1"%2F"$2}'
+ CONVERT_TARGET_PROJECT=parker%2Fintegration
++ python -c 'import sys, json; print(json.load(sys.stdin)["id"])'
++ curl -XGET -H 'Content-Type: application/json' --header 'PRIVATE-TOKEN: emEDrsaJVjxKK5gSWrf-' http://192.168.50.191:85/api/v4/projects/parker%2Fintegration
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    35  100    35    0     0     45      0 --:--:-- --:--:-- --:--:--    45100    35  100    35    0     0     45      0 --:--:-- --:--:-- --:--:--    45
Traceback (most recent call last):
  File "<string>", line 1, in <module>
KeyError: 'id'
+ SUB_PROJECT_ID=
+ true
+ '[' -z ']'
+ SOURCE_DIR=/root/workspace/workspace/parker-depth/depthmoduleforice
+ TARGET_DIR=/root/workspace/workspace/parker-depth/depth
+ prepare_env
++ uname -m
+ system_platform=aarch64
+ :
++ sort
++ wc -l
++ uniq
++ grep processor
++ cat /proc/cpuinfo
+ mt=-j4
+ export COMMIT_ID_FILE=/root/workspace/workspace/parker-depth/_last_build_id
+ COMMIT_ID_FILE=/root/workspace/workspace/parker-depth/_last_build_id
+ export COMMIT_MSG_FILE=/root/workspace/workspace/parker-depth/_commit-msg
+ COMMIT_MSG_FILE=/root/workspace/workspace/parker-depth/_commit-msg
+ export COMMIT_MSG_FILE_TMP=/root/workspace/workspace/parker-depth/_commit-msg.tmp
+ COMMIT_MSG_FILE_TMP=/root/workspace/workspace/parker-depth/_commit-msg.tmp
+ rm -f /root/workspace/workspace/parker-depth/_last_build_id
+ rm -f /root/workspace/workspace/parker-depth/_commit-msg
+ rm -f /root/workspace/workspace/parker-depth/_commit-msg.tmp
+ rm -f /root/workspace/workspace/parker-depth/result.log
+ rm -f /root/workspace/workspace/parker-depth/no_code_change.log
+ CLONE_DEPTH=--depth=1
+ PUBLICBASETYPES_DIR=/root/system/I18RPublicBaseTypes
+ cmdb_mysql 'insert into prebuild(job_name,source_project,source_branch,target_project,target_branch,time,build_url,node_name,build_user) values ('\''parker-depth'\'','\''qiuliru/depthmoduleforice'\'','\''parker_sunny'\'','\''parker/integration/depth'\'','\''master'\'',now(),'\''http://192.168.50.26:8080/job/parker-depth/33/'\'','\''khadas-car4'\'','\''qiuliru'\'')'
+ set +x
+ DOCKER_CONTAINER_I18=build-x64-18.04
+ DOCKER_CONTAINER_RUBBY=c405
+ DOCKER_CONTAINER_RUBBY_INSIDE=c3566
+ DOCKER_CONTAINER_JAVA=node
+ JENKINS_JOB_A=mind
+ JENKINS_JOB_B=rbn
+ JENKINS_JOB_C=mark-check-tools
+ JENKINS_JOB_D=java
+ JENKINS_JOB_E=nodejs
+ JENKINS_JOB_F=_ui
+ JENKINS_JOB_G=i12r
+ JENKINS_JOB_E=clean_recorder
+ JENKINS_JOB_F=i18r
+ [[ parker-depth =~ mind ]]
+ '[' true = false ']'
+ source_project_fetch
+ git clone ssh://git@192.168.50.191:222/qiuliru/depthmoduleforice -b parker_sunny --depth=1
Ê≠£ÂÖãÈöÜÂà∞ 'depthmoduleforice'...
+ target_project_update
+ rm -rf /root/workspace/workspace/parker-depth/depth
+ target_project_fetch
+ git clone ssh://git@192.168.50.191:222/parker/integration/depth -b master --depth=1
Ê≠£ÂÖãÈöÜÂà∞ 'depth'...
+ insert_db
+ pushd /root/workspace/workspace/parker-depth/depthmoduleforice
~/workspace/workspace/parker-depth/depthmoduleforice ~/workspace/workspace/parker-depth
++ cmdb_mysql 'SELECT first_commit_id FROM prebuild where source_project='\''qiuliru/depthmoduleforice'\'' and source_branch='\''parker_sunny'\'' and target_project='\''parker/integration/depth'\'' and target_branch='\''master'\'' and status='\''0'\'' and job_name='\''parker-depth'\'' order by id desc limit 1;'
++ set +x
+ version='first_commit_id
7b8091b'
++ awk -F ' ' '{print $2}'
++ echo first_commit_id 7b8091b
+ version=7b8091b
++ git log -1 --pretty=format:%h
+ first_commit_id_now=07a88fe
+ cmdb_mysql 'update prebuild set first_commit_id='\''07a88fe'\'' where build_url='\''http://192.168.50.26:8080/job/parker-depth/33/'\'';'
+ set +x
+ popd
~/workspace/workspace/parker-depth
+ [[ aarch64 =~ x86_64 ]]
+ [[ parker-depth =~ rbn ]]
+ [[ parker-depth =~ mind ]]
+ public_project_update
+ rm -rf /root/system/I18RPublicBaseTypes
+ [[ parker-depth =~ i12r ]]
+ [[ parker-depth =~ clean_recorder ]]
+ [[ parker-depth =~ i18r ]]
+ public_i18rutilitysubmodule_update
+ pushd /root/system/i18rutilitysubmodule
~/system/i18rutilitysubmodule ~/workspace/workspace/parker-depth
+ git checkout ./
+ git clean -xdf ./
+ git pull origin develop
Êù•Ëá™ ssh://192.168.50.191:222/AroundI18RProject/i18rutilitysubmodule
 * branch            develop    -> FETCH_HEAD
Â∑≤ÁªèÊòØÊúÄÊñ∞ÁöÑ„ÄÇ
+ ./install.sh
sudo: Êó†Ê≥ïËß£Êûê‰∏ªÊú∫Ôºöcar4
+ popd
~/workspace/workspace/parker-depth
+ project_build
+ pushd /root/workspace/workspace/parker-depth/depthmoduleforice
~/workspace/workspace/parker-depth/depthmoduleforice ~/workspace/workspace/parker-depth
+ project_init_remote
++ find -type f -name sync_submodules.sh
+ sf=
+ '[' -z ']'
+ git submodule update --init --recursive
Â≠êÊ®°ÁªÑ 'messages'Ôºàssh://git@192.168.50.191:222/parker/source/messages.gitÔºâÊú™ÂØπË∑ØÂæÑ 'messages' Ê≥®ÂÜå
Ê≠£ÂÖãÈöÜÂà∞ '/root/workspace/workspace/parker-depth/depthmoduleforice/messages'...
Â≠êÊ®°ÁªÑË∑ØÂæÑ 'messages'ÔºöÊ£ÄÂá∫ '3b1ca1e8d616c4d06bd56da8fdfebbcf4cfba3ae'
+ git submodule update --remote
Â≠êÊ®°ÁªÑË∑ØÂæÑ 'messages'ÔºöÊ£ÄÂá∫ 'd96f230288987e7b91a13af9cfc4794661750979'
+ sed -i 's/make -j[0-9].*/make -j4/g' compile.sh
+ '[' x07a88fe == x7b8091b ']'
+ '[' -z ']'
+ bash -ex compile.sh
+ git submodule update --init --recursive
Â≠êÊ®°ÁªÑË∑ØÂæÑ 'messages'ÔºöÊ£ÄÂá∫ '3b1ca1e8d616c4d06bd56da8fdfebbcf4cfba3ae'
+ rm -rf build
+ mkdir build
+ cd build
+ cmake ..
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
Build type: Release
Detected armv8  -D__ARM_PLATFORM__ -D__ARM_NEON__ -DENABLE_NEON -Ofast -std=c++11 -Wno-unused-result
-- Performing Test COMPILER_SUPPORTS_CXX11
-- Performing Test COMPILER_SUPPORTS_CXX11 - Success
-- Performing Test COMPILER_SUPPORTS_CXX0X
-- Performing Test COMPILER_SUPPORTS_CXX0X - Success
-- Using flag -std=c++11.
-- CONFIG_BUILD_ROS=ON
-- CONFIG_BUILD_ROS_CV=OFF
-- Using CATKIN_DEVEL_PREFIX: /root/workspace/workspace/parker-depth/depthmoduleforice/build/devel
-- Using CMAKE_PREFIX_PATH: /opt/ros/melodic
-- This workspace overlays: /opt/ros/melodic
-- Found PythonInterp: /usr/bin/python2 (found suitable version "2.7.17", minimum required is "2") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python2
-- Using Debian Python package layout
-- Using empy: /usr/bin/empy
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /root/workspace/workspace/parker-depth/depthmoduleforice/build/test_results
-- Found gtest sources under '/usr/src/googletest': gtests will be built
-- Found gmock sources under '/usr/src/googletest': gmock will be built
CMake Warning (dev) at /usr/src/googletest/CMakeLists.txt:3 (project):
  Policy CMP0048 is not set: project() command manages VERSION variables.
  Run "cmake --help-policy CMP0048" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The following variable(s) would be set to empty:

    PROJECT_VERSION
    PROJECT_VERSION_MAJOR
    PROJECT_VERSION_MINOR
    PROJECT_VERSION_PATCH
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/src/googletest/googlemock/CMakeLists.txt:40 (project):
  Policy CMP0048 is not set: project() command manages VERSION variables.
  Run "cmake --help-policy CMP0048" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The following variable(s) would be set to empty:

    PROJECT_VERSION
    PROJECT_VERSION_MAJOR
    PROJECT_VERSION_MINOR
    PROJECT_VERSION_PATCH
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/src/googletest/googletest/CMakeLists.txt:47 (project):
  Policy CMP0048 is not set: project() command manages VERSION variables.
  Run "cmake --help-policy CMP0048" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  The following variable(s) would be set to empty:

    PROJECT_VERSION
    PROJECT_VERSION_MAJOR
    PROJECT_VERSION_MINOR
    PROJECT_VERSION_PATCH
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Found PythonInterp: /usr/bin/python2 (found version "2.7.17") 
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Using Python nosetests: /usr/bin/nosetests-2.7
-- catkin 0.7.29
-- BUILD_SHARED_LIBS is on
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- Boost version: 1.65.1
-- Found the following Boost libraries:
--   system
--   filesystem
CMake Warning at CMakeLists.txt:98 (message):
  OpenMP found.


-- CONFIG_BUILD_I18R=ON
-- I18R_TYPES_DIRECTORY: /root/workspace/workspace/parker-depth/depthmoduleforice/messages
-- CONFIG_BUILD_I26R=OFF
-- CONFIG_BUILD_TOF=ON
-- CONFIG_BUILD_OPENCV_CONTRIB=OFF
-- Looking for CL_VERSION_2_2
-- Looking for CL_VERSION_2_2 - found
-- Found OpenCL: /usr/lib/aarch64-linux-gnu/libOpenCL.so (found version "2.2") 
-- CONFIG_BUILD_OPENCL=ON
-- config path="/root/workspace/workspace/parker-depth/depthmoduleforice/config/"
-- BUILD_TEST_NODE=ON
-- BUILD_TOF_CAM_TEST_NODE=OFF
-- Configuring done
-- Generating done
-- Build files have been written to: /root/workspace/workspace/parker-depth/depthmoduleforice/build
+ make -j4
Scanning dependencies of target depth
[  2%] Building CXX object CMakeFiles/depth.dir/modules/common/filter.cpp.o
[  8%] Building CXX object CMakeFiles/depth.dir/modules/common/math.cpp.o
[  8%] Building CXX object CMakeFiles/depth.dir/modules/common/cloud_quality.cpp.o
[ 10%] Building CXX object CMakeFiles/depth.dir/modules/common/point_process.cpp.o
[ 13%] Building CXX object CMakeFiles/depth.dir/modules/common/time.cpp.o
[ 16%] Building CXX object CMakeFiles/depth.dir/modules/common/visualization.cpp.o
[ 18%] Building CXX object CMakeFiles/depth.dir/modules/recorder/recorder.cpp.o
[ 21%] Building CXX object CMakeFiles/depth.dir/modules/laser/cutting_marks.cpp.o
[ 24%] Building CXX object CMakeFiles/depth.dir/modules/laser/grass_filter.cpp.o
[ 27%] Building CXX object CMakeFiles/depth.dir/modules/laser/ground_layer.cpp.o
[ 29%] Building CXX object CMakeFiles/depth.dir/modules/laser/laser_computation.cpp.o
[ 32%] Building CXX object CMakeFiles/depth.dir/modules/laser/laser_layers.cpp.o
[ 35%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/stereo_vision.cpp.o
[ 37%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/rectify/orb_extractor.cpp.o
[ 40%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/rectify/rectify.cpp.o
[ 43%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_cpu/block_matching.cpp.o
[ 45%] Building CXX object CMakeFiles/depth.dir/modules/tof/tof.cpp.o
[ 48%] Building CXX object CMakeFiles/depth.dir/modules/calibration/calibration.cpp.o
[ 51%] Building CXX object CMakeFiles/depth.dir/modules/impl/depth_impl.cpp.o
[ 54%] Building CXX object CMakeFiles/depth.dir/modules/impl/grass_thread.cpp.o
[ 56%] Building CXX object CMakeFiles/depth.dir/modules/impl/laser_thread.cpp.o
[ 59%] Building CXX object CMakeFiles/depth.dir/modules/impl/monitor_thread.cpp.o
[ 62%] Building CXX object CMakeFiles/depth.dir/modules/impl/stereo_thread.cpp.o
[ 64%] Building CXX object CMakeFiles/depth.dir/modules/pose_process/pose_process.cpp.o
[ 67%] Building CXX object CMakeFiles/depth.dir/modules/depth.cpp.o
[ 70%] Building CXX object CMakeFiles/depth.dir/modules/ros_function/ros_function.cpp.o
[ 72%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/bm_cl.cpp.o
[ 75%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/construction.cpp.o
[ 78%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/cvc_cl.cpp.o
[ 81%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/disp_sel_cl.cpp.o
[ 83%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/lrcheck.cpp.o
[ 86%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/ocl_util.cpp.o
[ 89%] Building CXX object CMakeFiles/depth.dir/modules/stereo_vision/bm_gpu/src/preprocess.cpp.o
[ 91%] Linking CXX shared library ../lib/libdepth.so
[ 91%] Built target depth
Scanning dependencies of target unittest
[ 94%] Building CXX object CMakeFiles/unittest.dir/test/test.cpp.o
[ 97%] Building CXX object CMakeFiles/unittest.dir/test/src/data_reader.cpp.o
[100%] Linking CXX executable ../test/unittest
[100%] Built target unittest
+ cd ..
+ cd install
+ mkdir include
+ cd ..
+ cp -a lib install/
+ cp -r include/I18R/depth.h install/include/
+ cp test/tof_cam_test.cpp install/test/
+ cp test/unittest install/test/
+ cp include/server.h install/test/
+ cp include/basetypes.h install/test/
+ cp build_config.h.in install/test/
+ popd
~/workspace/workspace/parker-depth
+ check_status_code
+ test -f /root/workspace/workspace/parker-depth/result.log
+ [[ '' = false ]]
+ generate_message
+ [[ parker-depth =~ mind ]]
+ cd /root/workspace/workspace/parker-depth/depthmoduleforice
+ git log -1 --oneline --decorate=
+ echo ''
+ echo ====================================
+ [[ -f /root/workspace/workspace/parker-depth/_commit-msg.tmp ]]
+ cat /root/workspace/workspace/parker-depth/_commit-msg.tmp
+ echo ''
+ echo 'build_num:      http://192.168.50.26:8080/job/parker-depth/33/'
+ echo 'Push aarch64 platform files'
+ generate_commits
+ pushd /root/workspace/workspace/parker-depth/depth
~/workspace/workspace/parker-depth/depth ~/workspace/workspace/parker-depth
++ xargs -l ls
++ find /root/workspace/workspace/parker-depth/depthmoduleforice -name install
+ install_dir_list='CMakeLists.txt
config
include
lib
README.md
test'
+ [[ true = true ]]
+ '[' -z arm64 ']'
+ git rm -r arm64/CMakeLists.txt arm64/config arm64/include arm64/lib arm64/README.md arm64/test
rm 'arm64/CMakeLists.txt'
rm 'arm64/README.md'
rm 'arm64/config/depth.yml'
rm 'arm64/config/hardware_param.yml'
rm 'arm64/config/test.yml'
rm 'arm64/config/tof_param.yml'
rm 'arm64/include/depth.h'
rm 'arm64/lib/libdepth.so'
rm 'arm64/lib/libdepth.so.3.0.8'
rm 'arm64/test/basetypes.h'
rm 'arm64/test/build_config.h.in'
rm 'arm64/test/run.sh'
rm 'arm64/test/server.h'
rm 'arm64/test/test.cpp'
rm 'arm64/test/tof_cam_test.cpp'
rm 'arm64/test/unittest'
+ [[ true = \m\a\r\k\-\c\h\e\c\k\-\t\o\o\l\s ]]
+ [[ true =~ mind ]]
+ [[ true =~ java ]]
+ [[ true =~ clean_recorder ]]
+ '[' -z ']'
+ '[' -z arm64 ']'
+ mkdir -p arm64
+ cp -ar /root/workspace/workspace/parker-depth/depthmoduleforice/install/. arm64/
+ git add --all .
++ git status -s
+ add_file_list='M  arm64/lib/libdepth.so.3.0.8'
+ '[' -z 'M  arm64/lib/libdepth.so.3.0.8' ']'
+ git commit -s -F /root/workspace/workspace/parker-depth/_commit-msg
[master b6fc7d4] 07a88fe 3.0.8.15 remove medium blur
 1 file changed, 0 insertions(+), 0 deletions(-)
++ git config --local --get branch.master.remote
+ local remote=origin
++ git config --local --get branch.master.merge
+ local branch=refs/heads/master
+ git push --no-verify origin HEAD:refs/heads/master
To ssh://192.168.50.191:222/parker/integration/depth
   07fcb68..b6fc7d4  HEAD -> master
++ grep 'i18r$'
++ echo parker-depth
+ j=
+ true
+ [[ parker-depth =~ mind ]]
+ [[ '' != '' ]]
+ popd
~/workspace/workspace/parker-depth
+ [[ -z 07a88fe ]]
+ cmdb_mysql 'update prebuild set status='\''0'\'' where build_url='\''http://192.168.50.26:8080/job/parker-depth/33/'\'';'
+ set +x
+ :
Finished: SUCCESS
